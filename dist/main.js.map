{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/chess.js","webpack:///./src/main.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;ACnEA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,UAAU;AACrD,kBAAkB,UAAU,GAAG;AAC/B;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,KAAK;AACzB;AACA,mBAAmB,eAAe,EAAE,sBAAsB;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0CAA0C,IAAI,EAAE,QAAQ;AACxD,4CAA4C,IAAI,EAAE,QAAQ;AAC1D;AACA,SAAS,2CAA2C,EAAE,IAAI;AAC1D;AACA;AACA,SAAS,2CAA2C,EAAE,IAAI;AAC1D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;AC3LA;AAAA;AACA;;AAEA;;AAEA","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","// @format\n'use strict';\n\nclass Piece {\n  constructor(chess, position) {\n    this.chess = chess;\n    this.position = position;\n    this.type = this.chess.getPieceType(position);\n\n    this.renderPiece();\n  }\n\n  renderPiece() {\n    const tile = document.getElementById(this.position);\n    const piece = document.createElement('img');\n    piece.src = `Chess_Pieces_Sprite.svg#${this.type}`;\n    piece.id = `${this.type}-${Math.random()\n      .toString(36)\n      .substr(2, 10)}`;\n    piece.className = 'piece';\n    tile.appendChild(piece);\n\n    // Drag/drop event handlers\n    piece.draggable = true;\n    piece.addEventListener('drag', this.chess.drag_handler.bind(this));\n    piece.addEventListener(\n      'dragstart',\n      this.chess.dragstart_handler.bind(this),\n    );\n    piece.addEventListener('click', this.chess.click_handler.bind(this));\n  }\n\n  test() {\n    console.log(this.type, this.position);\n  }\n}\n\nclass Chess {\n  constructor() {\n    this.lastMoveID = false;\n    this.chessboard = document.querySelector('.chessboard');\n    this.renderTiles();\n\n    this.startingPositions = {\n      a8: 'black-rook',\n      b8: 'black-knight',\n      c8: 'black-bishop',\n      d8: 'black-queen',\n      e8: 'black-king',\n      f8: 'black-bishop',\n      g8: 'black-knight',\n      h8: 'black-rook',\n      a7: 'black-pawn',\n      b7: 'black-pawn',\n      c7: 'black-pawn',\n      d7: 'black-pawn',\n      e7: 'black-pawn',\n      f7: 'black-pawn',\n      g7: 'black-pawn',\n      h7: 'black-pawn',\n      a1: 'white-rook',\n      b1: 'white-knight',\n      c1: 'white-bishop',\n      d1: 'white-queen',\n      e1: 'white-king',\n      f1: 'white-bishop',\n      g1: 'white-knight',\n      h1: 'white-rook',\n      a2: 'white-pawn',\n      b2: 'white-pawn',\n      c2: 'white-pawn',\n      d2: 'white-pawn',\n      e2: 'white-pawn',\n      f2: 'white-pawn',\n      g2: 'white-pawn',\n      h2: 'white-pawn',\n    };\n\n    this.pieces = [];\n    this.renderChessPieces();\n\n    this.currentDrag = false;\n  }\n\n  getPieceType(position) {\n    return this.startingPositions[position];\n  }\n\n  renderTiles() {\n    let tile;\n    self = this;\n    const columns = ['h', 'g', 'f', 'e', 'd', 'c', 'b', 'a'];\n    for (let i = 64; i--; ) {\n      tile = document.createElement('div');\n      tile.id = `${columns[i % 8]}${Math.floor(i / 8) + 1}`;\n      this.chessboard.appendChild(tile);\n\n      // Add our drag/drop event handlers\n      tile.ondrop = function(event) {\n        self.drop_handler(event);\n      };\n      tile.ondragover = function(event) {\n        self.dragover_handler(event);\n      };\n    }\n  }\n\n  renderChessPieces() {\n    let piece;\n    self = this;\n    Object.keys(this.startingPositions).forEach(function(pos) {\n      self.pieces.push(new Piece(self, pos));\n    });\n  }\n\n  click_handler(ev) {\n    console.log(this);\n    let parentElement = ev.target.parentElement;\n\n    // Show valid moves..?\n    const matches = parentElement.id.match(/(\\w)(\\d+)/);\n    let col = matches[1];\n    let row = Number(matches[2]);\n\n    const up = document.getElementById(`${col}${row + 1}`);\n    const down = document.getElementById(`${col}${row - 1}`);\n    const left = document.getElementById(\n      `${String.fromCharCode(col.charCodeAt(0) - 1)}${row}`,\n    );\n    const right = document.getElementById(\n      `${String.fromCharCode(col.charCodeAt(0) + 1)}${row}`,\n    );\n\n    if (up) if (up.innerHTML.length === 0) up.innerHTML = 'U';\n    if (down) if (down.innerHTML.length === 0) down.innerHTML = 'D';\n    if (left) if (left.innerHTML.length === 0) left.innerHTML = 'L';\n    if (right) if (right.innerHTML.length === 0) right.innerHTML = 'R';\n  }\n\n  drag_handler(ev) {\n    //console.log(\"Drag\");\n  }\n\n  dragstart_handler(ev) {\n    //console.log('dragStart');\n    //console.log(ev.srcElement);\n    ev.dataTransfer.setData('image', ev.target.id);\n\n    this.chess.currentDrag = this;\n  }\n\n  drop_handler(ev) {\n    // ev.target\n    // ev.currentTarget\n    //\n    let data = ev.dataTransfer.getData('image');\n    this.currentDrag.test();\n    this.currentDrag.position = ev.currentTarget.id;\n    this.currentDrag.test();\n\n    ev.preventDefault();\n\n    // If you drop the piece back on itself\n    if (ev.target.id === data) return;\n\n    // Check if the move is valid\n    // [TODO]\n\n    // Remove the yellow background from our last moved piece\n    if (this.lastMoveID) {\n      document.getElementById(this.lastMoveID).removeAttribute('style');\n    }\n\n    ev.currentTarget.style.background = '#ffeaa7';\n    this.lastMoveID = ev.currentTarget.id;\n\n    ev.currentTarget.innerHTML = '';\n\n    ev.currentTarget.appendChild(document.getElementById(data));\n  }\n\n  dragover_handler(ev) {\n    //console.log(\"dragOver\");\n    ev.preventDefault();\n  }\n}\n\nexport default Chess;\n","// @format\n'use strict';\n\nimport Chess from './chess.js';\n\nvar chess = new Chess();\n"],"sourceRoot":""}